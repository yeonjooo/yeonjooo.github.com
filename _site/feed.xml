<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2020-10-21T08:15:43-05:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Yeonjoo’s Blog</title><subtitle>For My Blog</subtitle><author><name>이연주</name></author><entry><title type="html">[TIL] 2020-10-21</title><link href="http://0.0.0.0:4000/til/TIL/" rel="alternate" type="text/html" title="[TIL] 2020-10-21" /><published>2020-10-21T00:00:00-05:00</published><updated>2020-10-21T00:00:00-05:00</updated><id>http://0.0.0.0:4000/til/TIL</id><content type="html" xml:base="http://0.0.0.0:4000/til/TIL/">&lt;ol&gt;
  &lt;li&gt;docker 설치 후 wsl과 연동
    &lt;ul&gt;
      &lt;li&gt;docker에서 jekyll 엔진을 구동하기 위해서는 회사 개발 컴퓨터로 접속해야만 했다.
이제는 WSL을 통해 Windows에서도 docker 사용할 수 있다!&lt;/li&gt;
      &lt;li&gt;docker 설치 후 docker setting에서 WSL 연동할 수 있도록 몇 가지 설정만 하면 되서 매우 편리하다.
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ko-kr/windows/wsl/tutorials/wsl-containers&quot;&gt;microsoft docs&lt;/a&gt;에 방법이 잘 정리되어 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Unix Network Programming 복습
    &lt;ul&gt;
      &lt;li&gt;C++로 WebServer를 만드는 프로젝트를 진행 중이다.&lt;/li&gt;
      &lt;li&gt;Network layer부터 다시 개발하고 있기 때문에 과거 공부하면서 정리했던 UNP를 다시 복습했다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>이연주</name></author><category term="TIL" /><category term="TIL" /><summary type="html">docker 설치 후 wsl과 연동 docker에서 jekyll 엔진을 구동하기 위해서는 회사 개발 컴퓨터로 접속해야만 했다. 이제는 WSL을 통해 Windows에서도 docker 사용할 수 있다! docker 설치 후 docker setting에서 WSL 연동할 수 있도록 몇 가지 설정만 하면 되서 매우 편리하다. microsoft docs에 방법이 잘 정리되어 있다.</summary></entry><entry><title type="html">[TIL] 2020-10-20</title><link href="http://0.0.0.0:4000/til/TIL/" rel="alternate" type="text/html" title="[TIL] 2020-10-20" /><published>2020-10-20T00:00:00-05:00</published><updated>2020-10-20T00:00:00-05:00</updated><id>http://0.0.0.0:4000/til/TIL</id><content type="html" xml:base="http://0.0.0.0:4000/til/TIL/">&lt;ol&gt;
  &lt;li&gt;CLion에서 github 연동
    &lt;ul&gt;
      &lt;li&gt;WSL
        &lt;ul&gt;
          &lt;li&gt;형상 관리를 위해 CLion과 Git을 연동했다. Git을 직접 설치한 후 경로를 잡아도 되지만, WSL을 이용하면 CLion에서 자동으로 WSL에 설치된 git path를 잡는다고 한다.&lt;/li&gt;
          &lt;li&gt;WSL 정리 -&amp;gt; 추후 페이지 추가&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;CLion에서 git 사용
        &lt;ul&gt;
          &lt;li&gt;Alt + `&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>이연주</name></author><category term="TIL" /><summary type="html">CLion에서 github 연동 WSL 형상 관리를 위해 CLion과 Git을 연동했다. Git을 직접 설치한 후 경로를 잡아도 되지만, WSL을 이용하면 CLion에서 자동으로 WSL에 설치된 git path를 잡는다고 한다. WSL 정리 -&amp;gt; 추후 페이지 추가 CLion에서 git 사용 Alt + `</summary></entry><entry><title type="html">[TIL] 2020-10-19</title><link href="http://0.0.0.0:4000/til/TIL/" rel="alternate" type="text/html" title="[TIL] 2020-10-19" /><published>2020-10-19T00:00:00-05:00</published><updated>2020-10-19T00:00:00-05:00</updated><id>http://0.0.0.0:4000/til/TIL</id><content type="html" xml:base="http://0.0.0.0:4000/til/TIL/">&lt;ol&gt;
  &lt;li&gt;github blog 생성
    &lt;ul&gt;
      &lt;li&gt;jekyll 적용&lt;/li&gt;
      &lt;li&gt;docker로 test 환경 구축&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;docker run –rm –volume=”$PWD:/srv/jekyll” –privileged -p 4000:4000 -it jekyll/jekyll /bin/bash
    jekyll serve
        &lt;ul&gt;
          &lt;li&gt;접속할 수 있는 주소를 출력해주면 해당 url로 접속하여 테스트 후 push
            &lt;ul&gt;
              &lt;li&gt;docker로 테스트 환경 구축하면 매우 편리&lt;/li&gt;
              &lt;li&gt;github은 내장하고 있는 ruby 엔진을 통해 로딩&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>이연주</name></author><category term="TIL" /><category term="TIL" /><summary type="html">github blog 생성 jekyll 적용 docker로 test 환경 구축 docker run –rm –volume=”$PWD:/srv/jekyll” –privileged -p 4000:4000 -it jekyll/jekyll /bin/bash jekyll serve 접속할 수 있는 주소를 출력해주면 해당 url로 접속하여 테스트 후 push docker로 테스트 환경 구축하면 매우 편리 github은 내장하고 있는 ruby 엔진을 통해 로딩</summary></entry></feed>